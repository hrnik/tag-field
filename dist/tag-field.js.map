{"version":3,"sources":["TagField/dom.js","TagField/events.js","TagField/service.js","TagField/index.js","EmailEditor.js","index.js"],"names":["ENTER_CODE","BACKSPACE_CODE","createElementWithClass","tagName","className","element","document","createElement","classList","add","clearTags","container","querySelectorAll","forEach","tag","parentNode","removeChild","createTags","tagService","getTags","map","tagFieldTag","isValidTag","tagFieldTagContent","innerHTML","appendChild","tagFieldTagClose","addEventListener","removeTag","transformStringToTags","delimiters","stringInput","reduce","acc","val","replace","RegExp","split","filter","str","item","trim","createInput","TagFieldInput","placeholder","processTags","addTag","handleAddTag","e","target","value","focus","keyCode","includes","key","removeLastTag","preventDefault","clipboardData","event","window","getData","TAGS_CHANGE","createTagService","tags","subscribers","handleTagsChange","subscribe","eventType","cb","setTagList","newTags","getAllValidTags","push","splice","indexOf","length","on","TagField","Error","tagFieldContainer","input","renderTags","insertAdjacentElement","EmailEditor","isValidEmail","email","re","test","String","toLowerCase","options"],"mappings":"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","file":"tag-field.js","sourceRoot":"../src","sourcesContent":["const ENTER_CODE = 13;\nconst BACKSPACE_CODE = 8;\n\nexport const createElementWithClass = (tagName, className) => {\n  const element = document.createElement(tagName);\n  element.classList.add(className);\n  return element;\n};\n\nexport const clearTags = container => {\n  const existingTags = [...container.querySelectorAll(\".tag-field__tag-block\")];\n\n  existingTags.forEach(tag => tag.parentNode.removeChild(tag));\n};\n\nexport const createTags = ({ tagService }) => {\n  return tagService.getTags().map(tag => {\n    const tagFieldTag = createElementWithClass(\"div\", \"tag-field__tag-block\");\n    if (tagService.isValidTag(tag)) {\n      tagFieldTag.classList.add(\"tag-field__tag-block--valid\");\n    } else {\n      tagFieldTag.classList.add(\"tag-field__tag-block--invalid\");\n    }\n\n    const tagFieldTagContent = createElementWithClass(\"div\", \"tag-field__tag-block-content\");\n    tagFieldTagContent.innerHTML = tag;\n    tagFieldTag.appendChild(tagFieldTagContent);\n\n    const tagFieldTagClose = createElementWithClass(\"div\", \"tag-field__tag-block-close\");\n    tagFieldTagClose.addEventListener(\"click\", () => {\n      tagService.removeTag(tag);\n    });\n\n    tagFieldTag.appendChild(tagFieldTagClose);\n\n    return tagFieldTag;\n  });\n};\n\nexport const transformStringToTags = (delimiters = [], stringInput = \"\") =>\n  delimiters\n    .reduce((acc, val) => acc.replace(new RegExp(`\\\\${val}`, \"g\"), \" \"), stringInput)\n    .split(\" \")\n    .filter(str => str !== \"\")\n    .map(item => item.trim());\n\nexport const createInput = ({ delimiters, tagService }) => {\n  const TagFieldInput = createElementWithClass(\"input\", \"tag-field__input\");\n  TagFieldInput.placeholder = \"add more people...\";\n\n  const processTags = stringInput => transformStringToTags(delimiters, stringInput).map(tagService.addTag);\n\n  const handleAddTag = e => {\n    const email = e.target.value;\n    if (!email) return;\n\n    processTags(e.target.value);\n    e.target.value = \"\";\n    e.target.focus();\n  };\n\n  TagFieldInput.addEventListener(\"blur\", handleAddTag);\n\n  TagFieldInput.addEventListener(\"keyup\", e => {\n    if (e.keyCode === ENTER_CODE || delimiters.includes(e.key)) {\n      handleAddTag(e);\n    }\n    if (e.keyCode === BACKSPACE_CODE && e.target.value == \"\") {\n      tagService.removeLastTag();\n    }\n  });\n\n  //  asdasd@asdasd.com,   asdasd@asdasd11.com\n  TagFieldInput.addEventListener(\"paste\", e => {\n    e.preventDefault();\n    const clipboardData = (event.clipboardData || window.clipboardData).getData(\"text\");\n    processTags(clipboardData);\n  });\n\n  return TagFieldInput;\n};\n","export const TAGS_CHANGE = \"tags_change\";\n","import { TAGS_CHANGE } from \"./events\";\n\nconst createTagService = ({ isValidTag = () => true } = {}) => {\n  let tags = [];\n  const subscribers = [];\n\n  const handleTagsChange = () =>\n    subscribers.filter(subscribe => subscribe.eventType === TAGS_CHANGE).forEach(subscribe => subscribe.cb(tags));\n\n  return {\n    getTags: () => tags,\n    setTagList: (newTags = []) => {\n      tags = newTags;\n      handleTagsChange();\n    },\n    getAllValidTags: () => tags.filter(isValidTag),\n    addTag: tag => {\n      if (tags.includes(tag)) return;\n      tags.push(tag);\n      handleTagsChange();\n    },\n    removeTag: tag => {\n      tags.splice(tags.indexOf(tag), 1);\n      handleTagsChange();\n    },\n    removeLastTag: () => {\n      if (tags.length > 0) {\n        tags.splice(-1);\n        handleTagsChange();\n      }\n    },\n    on: (eventType, cb) => {\n      subscribers.push({ eventType, cb });\n    },\n    isValidTag,\n  };\n};\n\nexport default createTagService;\n","import { createInput, clearTags, createTags, createElementWithClass } from \"./dom\";\nimport createTagService from \"./service\";\nimport { TAGS_CHANGE } from \"./events\";\n\nconst TagField = ({\n  container,\n  isValidTag = () => true,\n  delimiters = [\" \", \",\", \";\"],\n  placeholder = \"add more people...\",\n} = {}) => {\n  if (!container) {\n    throw new Error(\"You need to provide dom element for the container\");\n  }\n\n  const tagFieldContainer = createElementWithClass(\"label\", \"tag-field\");\n  container.appendChild(tagFieldContainer);\n\n  const tagService = createTagService({\n    isValidTag,\n  });\n\n  const input = createInput({\n    delimiters,\n    tagService,\n    placeholder,\n  });\n\n  const renderTags = ({ tagService, container }) => {\n    clearTags(container);\n\n    const tagElements = createTags({ tagService });\n\n    tagElements.forEach(item => {\n      input.insertAdjacentElement(\"beforebegin\", item);\n    });\n  };\n\n  tagFieldContainer.appendChild(input);\n\n  renderTags({ container, tagService });\n\n  tagService.on(TAGS_CHANGE, tags => {\n    renderTags({ container, tagService });\n  });\n\n  return {\n    ...tagService,\n  };\n};\n\nexport default TagField;\n","import TagField from \"./TagField\";\n\nconst isValidEmail = email => {\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\nconst EmailEditor = options => {\n  return TagField({\n    isValidTag: isValidEmail,\n    ...options,\n  });\n};\n\nexport default EmailEditor;\n","import TagField from \"./TagField\";\nimport EmailEditor from \"./EmailEditor\";\nimport \"./style.css\";\n\nwindow.TagField = TagField;\nwindow.EmailEditor = EmailEditor;\n\nexport { EmailEditor, TagField };\n"]}